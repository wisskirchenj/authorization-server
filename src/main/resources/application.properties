server.port=6060

spring.datasource.url=jdbc:postgresql://localhost:5432/users
spring.datasource.username=postgres
spring.datasource.password=password

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=gateway
# the client secret is "secret" (without quotes)
spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret=$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC
spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=client_credentials,authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://127.0.0.1:6600/login/oauth2/code/spring
spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=user.read,user.write,openid
spring.security.oauth2.authorizationserver.client.client-1.token.access-token-time-to-live=600s
spring.security.oauth2.authorizationserver.client.client-1.require-authorization-consent=true
logging.level.org.springframework.security=trace

spring.docker.compose.file=docker/docker-compose.yml